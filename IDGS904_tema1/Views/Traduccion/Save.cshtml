@model IDGS904_tema1.Models.Dictionary

@{
    ViewBag.Title = "Save";
}

<h2>Save</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Traduccion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Spanish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Spanish, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Spanish, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.English, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.English, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.English, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <input type="submit" name="answer" value="SHOW" class="btn btn-success show-table-btn" />
</div>


<style>
    .hidden {
        display: none;
    }
</style>

<div class="showme">
    <h2>Show</h2>
    <table class="table table-striped">
        <thead>
        <th>Spanish</th>
        <th>English</th>
        </thead>

        <tbody>
            @foreach (String tem in ViewBag.Dictio)
            {
                <tr>
                    @foreach (String item in tem.Split(' '))
                    {
                        <td>@item</td>
                    }
                </tr>
            }
        </tbody>

    </table>
</div>

<script>
    // Espera a que se cargue el documento
    document.addEventListener('DOMContentLoaded', function () {
        // Obtiene una referencia al botón "SHOW"
        var showButton = document.querySelector('.show-table-btn');

        // Obtiene una referencia a la tabla
        var table = document.querySelector('.showme');

        // Oculta la tabla al cargar la página
        table.classList.add('hidden');

        // Agrega un evento de clic al botón "SHOW"
        showButton.addEventListener('click', function () {
            // Muestra la tabla al hacer clic en el botón "SHOW"
            table.classList.remove('hidden');
        });
    });
</script>

